<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>页面搭建流程 on 蓝盟文档页</title>
    <link>https://wiki.lanunion.top/site/</link>
    <description>Recent content in 页面搭建流程 on 蓝盟文档页</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 09 Aug 2018 20:31:29 +0800</lastBuildDate>
    
	<atom:link href="https://wiki.lanunion.top/site/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>工具的选择</title>
      <link>https://wiki.lanunion.top/site/how-to-build/</link>
      <pubDate>Thu, 09 Aug 2018 20:30:47 +0800</pubDate>
      
      <guid>https://wiki.lanunion.top/site/how-to-build/</guid>
      <description>工具的选择 前言 虽然一上来就讲解些晦涩难懂的东西不是很好，但是还是需要用这种方式开头。以下说几个要点，也是在建立站点时最需要注意的地方。如果能够耐心看完应该会有不小的帮助。
 静态站点和动态站点（静态页面与动态页面） 本地生成及部署＆远程生成写作及部署 域名、CDN、SSL  小编我不是全部都懂，或者应该说是只懂一部分。但是没关系，一起学嘛！
 静态页面与动态页面 一句话：
 需不需要数据库
 这时最直观的区别，静态页面最大的好处是不需要数据库，只要有页面生成、渲染及编辑工具就基本能够工作。但是也存在着在自定义时对使用者部分技术能力有一定要求这个瓶颈的存在。上面的区别其实主要是再说一众静态页面生成工具与WordPress这个工具的区别。对于有能力或者有条件的话当然是首推WordPress的。毕竟提供的页面服务相当稳定，主题和插件都很丰富很成熟。 但是对于对工具没有要求的其实静态页面是最好的选择没有之一。主要优点如下：
 可以有效利用免费的pages服务，可以省下相当一笔经费。 由于大部分静态页面生成器是由JavaScript及其变种为基础写的，因此会在一定程度上可以更方便的做自定义。 页面体积小，页面体积小，页面体积小（重要的事情说三遍）。  但是同时也存在以下缺点：
 在部署上有一定难度，上手准备时间长。 重度依赖工作环境。 JavaScript作为脚本语言有很差的可读性。  但是由于本人没接触过WordPress这种工具，因此以静态页面为主要介绍对象。
推荐的工具 说了那么多，其实就一句话：我极力推荐使用静态页面服务。那么如何选择适合自己的呢？这里将介绍几个比较常见的静态页面生成工具。
HEXO 为方便书写接下来一律写作“hexo”。 hexo是一个基于nodejs的静态页面生成工具。由于其基于node的属性决定了它非常容易运行在许多操作系统上，包括主流的Windows、Mac OS、以及Linux。 这个工具最大的便利在于其丰富的使用和容易上手的配置文件，从部署到写作到远程部署，短短几分钟你就可以生成一个现代化、漂亮又整洁的博客。它预装了主题模版Landscape使得它在未经优化时就有着良好的表现。（接下来也会以hexo作为建站工具之一进行讲解）
HUGO 为方便书写接下来写作Hugo。 hugo是一个基于go语言的工具。如果你对于尝试过后hexo抱怨满满，那不妨来试试这款工具。 不同于hexo，HUGO的体积非常之小而且文件也很单薄&amp;mdash;&amp;mdash;全部文件只有HUGO这个程序本身而已（不包含站点文件）。如果说hexo是大而全，那么HUGO就是典型的小而美。”麻雀虽小五脏俱全”，HUGO在除体积小外功能上并不输给hexo，不过由于其小的特性，HUGO在可拓展性上并没有hexo强。因此HUGO更适合拿来建立说明文档一类或者元素较少的站点。
其他（TODO） 总结 比起说再多的东西，我更愿意使用图表来说明一些道理，因此，对比如图：
   生成工具 官网 体积 渲染速度 可拓展性 上手难度 依赖于 典型站点     hexo https://hexo.io 较大 中等偏慢 极强 极其容易 nodejs、git http://purefkh.xyz 、https://blog.weearc.top   HUGO https://gohugo.</description>
    </item>
    
  </channel>
</rss>